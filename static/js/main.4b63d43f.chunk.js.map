{"version":3,"sources":["types/FilterStatusEnum.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","app/filteringTodos.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterStatusEnum","actions","todo","type","payload","currentTodoReducer","state","action","startBeforeFilter","query","status","ALL","selectAction","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","currrentTodo","filterTodos","useMemo","filteredByTodos","completed","COMPLETED","ACTIVE","title","toLocaleLowerCase","includes","filteringTodos","length","className","map","id","cn","onClick","actionsCurrentTodos","TodoFilter","onSubmit","event","preventDefault","value","onChange","actionsFilter","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","isLoadingModal","setIsLoadingModal","user","setUser","useEffect","userId","finally","href","email","name","App","isLoading","setIsLoading","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b63d43f.chunk.js","sourcesContent":["export enum FilterStatusEnum {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/REMOVE':\n      return null;\n    case 'currentTodo/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { FilterStatusEnum } from '../types/FilterStatusEnum';\nimport { Status } from '../types/Status';\n\ntype ActionFilterBySelect = { type: 'filter/SELECT', payload: Status };\ntype ActionFilterByQuery = { type: 'filter/QUERY', payload: string };\n\nconst filterBySelect = (selectAction: Status): ActionFilterBySelect => {\n  return {\n    type: 'filter/SELECT',\n    payload: selectAction,\n  };\n};\n\nconst filterByQuery = (query: string): ActionFilterByQuery => {\n  return {\n    type: 'filter/QUERY',\n    payload: query,\n  };\n};\n\ntype Actions = ActionFilterBySelect | ActionFilterByQuery;\n\ntype Filter = {\n  query: string,\n  status: Status,\n};\n\nconst startBeforeFilter: Filter = { query: '', status: FilterStatusEnum.ALL };\n\nconst filterReducer = (state = startBeforeFilter, actions: Actions): Filter => {\n  switch (actions.type) {\n    case 'filter/SELECT':\n      return {\n        ...state,\n        status: actions.payload,\n      };\n    case 'filter/QUERY':\n      return {\n        ...state,\n        query: actions.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const actions = { filterByQuery, filterBySelect };\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype ActionSetTodos = { type: 'todos/SET', payload: Todo[] };\n\nconst setTodos = (todos: Todo[]): ActionSetTodos => {\n  return {\n    type: 'todos/SET',\n    payload: todos,\n  };\n};\n\nconst todosReducer = (state: Todo[] = [], actions: ActionSetTodos): Todo[] => {\n  switch (actions.type) {\n    case 'todos/SET':\n      return [...state, ...actions.payload];\n    default:\n      return state;\n  }\n};\n\nexport const actions = { setTodos };\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React, { useMemo } from 'react';\nimport cn from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { filteringTodos } from '../../app/filteringTodos';\nimport { Status } from '../../types/Status';\nimport { actions as actionsCurrentTodos } from '../../features/currentTodo';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const { query, status } = useAppSelector(state => state.filter);\n\n  const dispatch = useAppDispatch();\n  const currrentTodo = useAppSelector(state => state.currentTodo);\n  const filterTodos = useMemo(() => filteringTodos(todos, query, status as Status),\n    [query, status, todos]);\n\n  return (\n    <>\n      {!filterTodos.length ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )\n        : (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              { filterTodos.map((todo) => {\n                const { id, completed, title } = todo;\n\n                return (\n                  <tr data-cy=\"todo\">\n                    <td className=\"is-vcentered\">{id}</td>\n                    <td className=\"is-vcentered\">\n                      {\n                        completed && (\n                          <span className=\"icon\" data-cy=\"iconCompleted\">\n                            <i className=\"fas fa-check\" />\n                          </span>\n                        )\n                      }\n                    </td>\n\n                    <td className=\"is-vcentered is-expanded\">\n                      <p className={cn({\n                        'has-text-danger': !completed,\n                        'has-text-success': completed,\n                      })}\n                      >\n                        {title}\n                      </p>\n                    </td>\n\n                    <td className=\"has-text-right is-vcentered\">\n                      <button\n                        data-cy=\"selectButton\"\n                        className=\"button\"\n                        type=\"button\"\n                        onClick={() => dispatch(actionsCurrentTodos.setTodo(todo))}\n                      >\n                        <span className=\"icon\">\n                          <i className={cn('far', {\n                            'fa-eye-slash': currrentTodo?.id === id,\n                            'fa-eye': currrentTodo?.id !== id,\n                          })}\n                          />\n                        </span>\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","import { FilterStatusEnum } from '../types/FilterStatusEnum';\nimport { Status } from '../types/Status';\nimport { Todo } from '../types/Todo';\n\nexport const filteringTodos = (\n  todos: Todo[],\n  query: string,\n  status: Status,\n) => {\n  const filteredByTodos = todos.filter((todo) => {\n    const { completed } = todo;\n\n    switch (status) {\n      case FilterStatusEnum.ALL:\n        return true;\n      case FilterStatusEnum.COMPLETED:\n        return completed;\n      case FilterStatusEnum.ACTIVE:\n        return !completed;\n      default:\n        return true;\n    }\n  });\n\n  const filteredByQueryTodos = query\n    ? filteredByTodos.filter((todo) => todo.title\n      .toLocaleLowerCase().includes(query.toLocaleLowerCase()))\n    : filteredByTodos;\n\n  return filteredByQueryTodos;\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as actionsFilter } from '../../features/filter';\nimport { Status } from '../../types/Status';\nimport { FilterStatusEnum } from '../../types/FilterStatusEnum';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query, status } = useAppSelector(state => state.filter);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => {\n              dispatch(\n                actionsFilter.filterBySelect(event.target.value as Status),\n              );\n            }}\n          >\n            <option value={FilterStatusEnum.ALL}>All</option>\n            <option value={FilterStatusEnum.ACTIVE}>Active</option>\n            <option value={FilterStatusEnum.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            dispatch(actionsFilter.filterByQuery(event.target.value));\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          { query\n          && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(actionsFilter.filterByQuery(''))}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { actions as actionsCurrentTodos } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const [isLoadingModal, setIsLoadingModal] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setIsLoadingModal(true);\n\n    if (currentTodo?.userId) {\n      getUser(currentTodo.userId)\n        .then(setUser)\n        .finally(() => setIsLoadingModal(false));\n    }\n  }, [currentTodo?.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoadingModal && <Loader />}\n\n      { !isLoadingModal && user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(actionsCurrentTodos.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{currentTodo?.title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* For not completed */}\n              {!currentTodo?.completed\n              && <strong className=\"has-text-danger\">Planned</strong>}\n\n              {/* For completed */}\n              {currentTodo?.completed\n              && <strong className=\"has-text-success\">Done</strong>}\n              {' by '}\n              <a href={`mailto:${user?.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then((todo: Todo[]) => dispatch(todosActions.setTodos(todo)))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {!isLoading && !!todos.length && <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}