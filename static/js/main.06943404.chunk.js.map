{"version":3,"sources":["types/FilterStatusEnum.ts","features/currentTodo.ts","features/filter.ts","api.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterStatusEnum","actions","todo","type","payload","currentTodoReducer","state","action","startBeforeFilter","query","status","ALL","selectAction","filterReducer","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","SET_TODOS","FETCH_TODOS_START","FETCH_TODOS_SUCCESS","FETCH_TODOS_FAILURE","setTodos","todos","todosReducer","data","isLoading","error","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","todosState","filterState","dispatch","filteredTodos","useMemo","completed","COMPLETED","ACTIVE","title","toLowerCase","includes","length","className","map","id","cn","onClick","actionsCurrentTodos","TodoFilter","onSubmit","event","preventDefault","value","onChange","actionsFilter","target","placeholder","style","pointerEvents","Loader","TodoModal","useState","isLoadingModal","setIsLoadingModal","user","setUser","useEffect","userId","finally","href","email","name","App","setIsLoading","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06943404.chunk.js","sourcesContent":["export enum FilterStatusEnum {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/REMOVE':\n      return null;\n    case 'currentTodo/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { FilterStatusEnum } from '../types/FilterStatusEnum';\nimport { Status } from '../types/Status';\n\ntype ActionFilterBySelect = { type: 'filter/SELECT', payload: Status };\ntype ActionFilterByQuery = { type: 'filter/QUERY', payload: string };\n\nconst filterBySelect = (selectAction: Status): ActionFilterBySelect => {\n  return {\n    type: 'filter/SELECT',\n    payload: selectAction,\n  };\n};\n\nconst filterByQuery = (query: string): ActionFilterByQuery => {\n  return {\n    type: 'filter/QUERY',\n    payload: query,\n  };\n};\n\ntype Actions = ActionFilterBySelect | ActionFilterByQuery;\n\ntype Filter = {\n  query: string,\n  status: Status,\n};\n\nconst startBeforeFilter: Filter = { query: '', status: FilterStatusEnum.ALL };\n\nconst filterReducer = (state = startBeforeFilter, actions: Actions): Filter => {\n  switch (actions.type) {\n    case 'filter/SELECT':\n      return {\n        ...state,\n        status: actions.payload,\n      };\n    case 'filter/QUERY':\n      return {\n        ...state,\n        query: actions.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const actions = { filterByQuery, filterBySelect };\n\nexport default filterReducer;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { Dispatch } from 'redux';\nimport { Todo } from '../types/Todo';\nimport { getTodos } from '../api';\n\nexport const SET_TODOS = 'todos/SET';\nexport const FETCH_TODOS_START = 'todos/FETCH_START';\nexport const FETCH_TODOS_SUCCESS = 'todos/FETCH_SUCCESS';\nexport const FETCH_TODOS_FAILURE = 'todos/FETCH_FAILURE';\n\nexport const setTodos = (todos: Todo[]) => ({\n  type: SET_TODOS,\n  payload: todos,\n});\n\nexport const fetchTodosStart = () => ({\n  type: FETCH_TODOS_START,\n});\n\nexport const fetchTodosSuccess = () => ({\n  type: FETCH_TODOS_SUCCESS,\n});\n\nexport const fetchTodosFailure = (error: string) => ({\n  type: FETCH_TODOS_FAILURE,\n  payload: error,\n});\n\nexport const fetchTodos = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(fetchTodosStart());\n\n      const todos = await getTodos();\n\n      dispatch(setTodos(todos));\n      dispatch(fetchTodosSuccess());\n    } catch (error: any) {\n      dispatch(fetchTodosFailure(error.message));\n    }\n  };\n};\n\nconst todosReducer = (\n  state: {\n    data: Todo[];\n    isLoading: boolean;\n    error: string | null\n  } = { data: [], isLoading: false, error: null }, action: any,\n) => {\n  switch (action.type) {\n    case SET_TODOS:\n      return {\n        ...state, data: action.payload, isLoading: false, error: null,\n      };\n    case FETCH_TODOS_START:\n      return { ...state, isLoading: true, error: null };\n    case FETCH_TODOS_SUCCESS:\n      return { ...state, isLoading: false, error: null };\n    case FETCH_TODOS_FAILURE:\n      return { ...state, isLoading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const actions = {\n  setTodos,\n  fetchTodosStart,\n  fetchTodosFailure,\n  fetchTodosSuccess,\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useMemo } from 'react';\nimport cn from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as actionsCurrentTodos } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { FilterStatusEnum } from '../../types/FilterStatusEnum';\n\nexport const TodoList: React.FC = () => {\n  const todosState = useAppSelector((state) => state.todos);\n  const filterState = useAppSelector((state) => state.filter);\n  const { query, status } = filterState;\n\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n\n  const filteredTodos = useMemo(() => {\n    const { data: todos } = todosState;\n\n    return todos.filter((todo: Todo) => {\n      const { completed } = todo;\n\n      switch (status) {\n        case FilterStatusEnum.ALL:\n          return true;\n        case FilterStatusEnum.COMPLETED:\n          return completed;\n        case FilterStatusEnum.ACTIVE:\n          return !completed;\n        default:\n          return true;\n      }\n    }).filter((todo: Todo) => (query\n      ? todo.title.toLowerCase().includes(query.toLowerCase())\n      : true));\n  }, [query, status, todosState]);\n\n  return (\n    <>\n      {!filteredTodos.length ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching the current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {filteredTodos.map((todo: Todo) => {\n              const { id, completed, title } = todo;\n\n              return (\n                <tr key={id} data-cy=\"todo\">\n                  <td className=\"is-vcentered\">{id}</td>\n                  <td className=\"is-vcentered\">\n                    {completed && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    )}\n                  </td>\n                  <td className=\"is-vcentered is-expanded\">\n                    <p\n                      className={cn({\n                        'has-text-danger': !completed,\n                        'has-text-success': completed,\n                      })}\n                    >\n                      {title}\n                    </p>\n                  </td>\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => dispatch(\n                        actionsCurrentTodos.setTodo(todo),\n                      )}\n                    >\n                      <span className=\"icon\">\n                        <i\n                          className={cn('far', {\n                            'fa-eye-slash': currentTodo?.id === id,\n                            'fa-eye': currentTodo?.id !== id,\n                          })}\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as actionsFilter } from '../../features/filter';\nimport { Status } from '../../types/Status';\nimport { FilterStatusEnum } from '../../types/FilterStatusEnum';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query, status } = useAppSelector(state => state.filter);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => {\n              dispatch(\n                actionsFilter.filterBySelect(event.target.value as Status),\n              );\n            }}\n          >\n            <option value={FilterStatusEnum.ALL}>All</option>\n            <option value={FilterStatusEnum.ACTIVE}>Active</option>\n            <option value={FilterStatusEnum.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            dispatch(actionsFilter.filterByQuery(event.target.value));\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          { query\n          && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(actionsFilter.filterByQuery(''))}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { actions as actionsCurrentTodos } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const [isLoadingModal, setIsLoadingModal] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setIsLoadingModal(true);\n\n    if (currentTodo?.userId) {\n      getUser(currentTodo.userId)\n        .then(setUser)\n        .finally(() => setIsLoadingModal(false));\n    }\n  }, [currentTodo?.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoadingModal && <Loader />}\n\n      { !isLoadingModal && user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(actionsCurrentTodos.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{currentTodo?.title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* For not completed */}\n              {!currentTodo?.completed\n              && <strong className=\"has-text-danger\">Planned</strong>}\n\n              {/* For completed */}\n              {currentTodo?.completed\n              && <strong className=\"has-text-success\">Done</strong>}\n              {' by '}\n              <a href={`mailto:${user?.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then((todo: Todo[]) => dispatch(todosActions.setTodos(todo)))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {!isLoading && !!todos.data.length && <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}